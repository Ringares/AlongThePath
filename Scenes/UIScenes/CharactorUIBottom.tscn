[gd_scene load_steps=16 format=2]

[ext_resource path="res://Scenes/UIScenes/CharactorUI.gd" type="Script" id=1]
[ext_resource path="res://Resources/Fonts/30.tres" type="DynamicFont" id=2]
[ext_resource path="res://Scenes/SkillScene/Skill.tscn" type="PackedScene" id=3]

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0.870588, 0.301961, 0.301961, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=11]
bg_color = Color( 0.254902, 0.235294, 0.235294, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 0.34902, 0.588235, 0.843137, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.254902, 0.235294, 0.235294, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float value: hint_range(0, 100); // %
uniform float thickness: hint_range(0, 100) = 30.; // % thickness
uniform sampler2D fg: hint_albedo;
uniform sampler2D bg: hint_black_albedo;
uniform float offset: hint_range(0, 100); // %
uniform float smoothing: hint_range(0, 100) = 5.;

void fragment() {
	vec2 point = UV - vec2(0.5);
	float PI = 3.14159265358979323846;
	float ang = (1. - atan(point.x, point.y) / PI) * 50. - offset;
	if (ang < 0.)
		ang += 100.;
	float s = smoothing / 1000.;
	float k = PI / 2. / s;
	float r1 = .5 - thickness / 200.;
	float r2 = .5;
	float r = length(point);
	float uy = (r2 - r) / (r2 - r1);
	if (r > r2 || r < r1)
		COLOR.a = 0.;
	else {
		if (ang <= value) 
			COLOR = texture(fg, vec2(ang / 100., uy));
		else
			COLOR = texture(bg, vec2(ang / 100., uy));
		if ((r2 - r) < s)
			COLOR.a = sin((r2 - r) * k);
		if ((r - r1) < s)
			COLOR.a = sin((r - r1) * k);
	}
}"

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.74 )
colors = PoolColorArray( 0.230156, 0.230156, 0.230156, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="Gradient" id=8]
colors = PoolColorArray( 0.917647, 0.694118, 0.270588, 1, 0.917647, 0.694118, 0.270588, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/value = 70.638
shader_param/thickness = 60.0
shader_param/offset = 0.0
shader_param/smoothing = 20.0
shader_param/fg = SubResource( 9 )
shader_param/bg = SubResource( 7 )

[sub_resource type="Animation" id=12]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.921569, 0.921569, 0.921569, 1 ) ]
}

[sub_resource type="Animation" id=13]
resource_name = "attacked"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0.921569, 0.921569, 0.921569, 1 ), Color( 0.827451, 0.4, 0.4, 1 ), Color( 0.921569, 0.921569, 0.921569, 1 ), Color( 0.827451, 0.4, 0.4, 1 ), Color( 0.921569, 0.921569, 0.921569, 1 ) ]
}

[node name="CharactorUIBottom" type="MarginContainer"]
modulate = Color( 0.921569, 0.921569, 0.921569, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -940.0
custom_constants/margin_right = 10
custom_constants/margin_top = 10
custom_constants/margin_left = 10
custom_constants/margin_bottom = 10
script = ExtResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="."]
margin_left = 10.0
margin_top = 10.0
margin_right = 630.0
margin_bottom = 80.0
size_flags_horizontal = 3
size_flags_vertical = 0
custom_constants/separation = 10
alignment = 1

[node name="SkillBox" type="HBoxContainer" parent="HBoxContainer"]
margin_right = 200.0
margin_bottom = 70.0
rect_min_size = Vector2( 200, 0 )
alignment = 2

[node name="Skill" parent="HBoxContainer/SkillBox" instance=ExtResource( 3 )]
visible = false
margin_left = 136.0
margin_top = 3.0
margin_right = 200.0
margin_bottom = 67.0

[node name="VBoxContainer" type="VBoxContainer" parent="HBoxContainer"]
margin_left = 210.0
margin_right = 546.0
margin_bottom = 70.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/separation = 10
alignment = 1

[node name="HPBar" type="ProgressBar" parent="HBoxContainer/VBoxContainer"]
margin_right = 336.0
margin_bottom = 30.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
custom_styles/fg = SubResource( 10 )
custom_styles/bg = SubResource( 11 )
step = 1.0
value = 20.0

[node name="ShieldBar" type="ProgressBar" parent="HBoxContainer/VBoxContainer"]
margin_top = 40.0
margin_right = 336.0
margin_bottom = 70.0
rect_min_size = Vector2( 0, 20 )
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_styles/fg = SubResource( 3 )
custom_styles/bg = SubResource( 2 )
step = 1.0
value = 20.0

[node name="EnergyBar" type="ColorRect" parent="HBoxContainer"]
material = SubResource( 5 )
margin_left = 556.0
margin_right = 620.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 64 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Tween" type="Tween" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 12 )
anims/attacked = SubResource( 13 )
